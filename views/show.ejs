<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>
    <%= filename %> | Finder...
  </title>
    <link rel="icon" type="image/png" href="/images/fm1.png" />

  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    tailwind.config = {
      darkMode: 'class',
      theme: {
        extend: {
          colors: {
            primary: {
              50: '#f0f9ff',
              100: '#e0f2fe',
              500: '#3b82f6',
              600: '#2563eb',
            },
          },
        }
      }
    }
  </script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    html {
      transition: background-color 0.3s ease, color 0.3s ease;
    }

    body {
      padding-bottom: 70px;
      min-height: 100vh;
      transition: background-color 0.3s ease, color 0.3s ease;
    }

    .pdf-container {
      width: 100%;
      height: 70vh;
      border: 1px solid #e5e7eb;
      border-radius: 0.5rem;
      overflow: hidden;
    }

    .image-container {
      width: 100%;
      height: auto;
      max-height: 70vh;
      display: flex;
      justify-content: center;
      align-items: center;
      margin: 0 auto;
      border-radius: 0.5rem;
      overflow: hidden;
      background-color: #f3f4f6;
    }

    .image-container img {
      width: auto;
      max-width: 100%;
      height: auto;
      max-height: 70vh;
      object-fit: contain;
    }

    .dark .pdf-container {
      border-color: #374151;
    }

    .dark .image-container {
      background-color: #1f2937;
    }

    /* AI Icon Animations */
    .ai-icon {
      transition: all 0.3s ease;
      animation: ai-pulse 2.5s infinite ease-in-out;
    }

    .ai-icon:hover {
      animation: ai-hover-pulse 0.8s infinite ease-in-out;
      filter: drop-shadow(0 0 8px rgba(74, 222, 128, 0.6));
    }

    @keyframes ai-pulse {
      0% {
        transform: scale(1);
        opacity: 0.9;
      }

      50% {
        transform: scale(1.08);
        opacity: 1;
      }

      100% {
        transform: scale(1);
        opacity: 0.9;
      }
    }

    @keyframes ai-hover-pulse {
      0% {
        transform: scale(1);
      }

      50% {
        transform: scale(1.2);
      }

      100% {
        transform: scale(1);
      }
    }

    .ai-tooltip {
      position: absolute;
      right: 100%;
      top: 50%;
      transform: translateY(-50%);
      background: rgba(15, 23, 42, 0.9);
      color: white;
      padding: 4px 10px;
      border-radius: 6px;
      font-size: 12px;
      white-space: nowrap;
      pointer-events: none;
      opacity: 0;
      transition: all 0.3s ease;
      margin-right: 8px;
    }

    .ai-tooltip::after {
      content: '';
      position: absolute;
      left: 100%;
      top: 50%;
      transform: translateY(-50%);
      border-width: 4px;
      border-style: solid;
      border-color: transparent transparent transparent rgba(15, 23, 42, 0.9);
    }

    #ai-assistant:hover .ai-tooltip {
      opacity: 1;
      margin-right: 12px;
    }

    /* Share Button Styles */
    .share-btn {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      background: linear-gradient(135deg, #3b82f6, #2563eb);
      color: white;
      box-shadow: 0 2px 10px rgba(59, 130, 246, 0.3);
      cursor: pointer;
      transition: all 0.3s ease;
      margin-right: 12px;
    }

    .share-btn:active {
      transform: scale(0.95);
    }

    .share-btn i {
      font-size: 1rem;
    }

    .action-buttons {
      display: flex;
      align-items: center;
    }

    .edit-btn {
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .edit-btn:hover {
      transform: translateY(-1px);
      box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
    }

    /* Responsive adjustments */
    @media (max-width: 768px) {
      .pdf-container {
        height: 60vh;
      }

      .image-container,
      .image-container img {
        max-height: 60vh;
      }

      .container {
        padding: 1rem;
      }

      .edit-btn-text {
        display: none;
      }

      .edit-btn-icon {
        margin-right: 0;
      }
    }

    /* PDF mobile fallback */
    .pdf-mobile-fallback {
      display: none;
      text-align: center;
      padding: 1rem;
      background: #f8fafc;
      border-radius: 0.5rem;
      margin-top: 1rem;
    }

    .dark .pdf-mobile-fallback {
      background: #1e293b;
    }

    @media (max-width: 640px) {
      .pdf-mobile-fallback {
        display: block;
      }

      .image-container,
      .image-container img {
        max-height: 50vh;
      }
    }

    /* Loading animation for images */
    .image-loading {
      position: relative;
      background-color: #f3f4f6;
      overflow: hidden;
      min-height: 200px;
    }

    .image-loading::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: linear-gradient(90deg,
          rgba(255, 255, 255, 0) 0%,
          rgba(255, 255, 255, 0.8) 50%,
          rgba(255, 255, 255, 0) 100%);
      animation: shimmer 1.5s infinite;
    }

    @keyframes shimmer {
      0% {
        transform: translateX(-100%);
      }

      100% {
        transform: translateX(100%);
      }
    }

    /* Markdown content styling */
    .prose {
      color: #374151;
    }

    .dark .prose {
      color: #e5e7eb;
    }

    .prose a {
      color: #3b82f6;
      text-decoration: none;
    }

    .dark .prose a {
      color: #60a5fa;
    }

    .prose a:hover {
      text-decoration: underline;
    }

    .prose code {
      background-color: #f3f4f6;
      padding: 0.2em 0.4em;
      border-radius: 0.25em;
      font-family: monospace;
    }

    .dark .prose code {
      background-color: #374151;
      color: #f3f4f6;
    }

    .prose pre {
      background-color: #f3f4f6;
      padding: 1em;
      border-radius: 0.5em;
      overflow-x: auto;
    }

    .dark .prose pre {
      background-color: #1f2937;
    }

    .prose img {
      max-width: 100%;
      height: auto;
      border-radius: 0.5em;
    }

    /* Mobile Menu Bar */
    .mobile-menu-bar {
      position: fixed;
      bottom: 0px;
      left: 50%;
      transform: translateX(-50%);
      width: calc(100%);
      max-width: 400px;
      background: rgba(255, 255, 255, 0.9);
      backdrop-filter: blur(20px);
      -webkit-backdrop-filter: blur(20px);
      border-radius: 16px 16px 0 0;
      padding: 10px;
      display: none;
      justify-content: space-around;
      align-items: center;
      z-index: 40;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(255, 255, 255, 0.2) inset;
      transition: all 0.3s ease;
    }

    .dark .mobile-menu-bar {
      background: rgb(39 39 42 / 0.8);
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2), 0 0 0 1px rgba(255, 255, 255, 0.1) inset;
    }

    .mobile-menu-item {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      padding: 8px 12px;
      border-radius: 12px;
      transition: all 0.3s ease;
      cursor: pointer;
    }

    .mobile-menu-item:hover {
      background: rgba(59, 130, 246, 0.1);
    }

    .mobile-menu-item.active {
      background: rgba(59, 130, 246, 0.2);
    }

    .mobile-menu-icon {
      width: 20px;
      height: 20px;
      margin-bottom: 4px;
      color: #4b5563;
      transition: all 0.3s ease;
    }

    .dark .mobile-menu-icon {
      color: #d1d5db;
    }

    .mobile-menu-item:hover .mobile-menu-icon,
    .mobile-menu-item.active .mobile-menu-icon {
      color: #3b82f6;
    }

    .mobile-menu-label {
      font-size: 12px;
      color: #4b5563;
      transition: all 0.3s ease;
    }

    .dark .mobile-menu-label {
      color: #d1d5db;
    }

    .mobile-menu-item:hover .mobile-menu-label,
    .mobile-menu-item.active .mobile-menu-label {
      color: #3b82f6;
    }

    @media (max-width: 768px) {
      .mobile-menu-bar {
        display: flex;
      }

      .button-container {
        display: none !important;
      }
    }
  </style>
</head>

<body class="bg-white dark:bg-zinc-900 text-zinc-900 dark:text-white">

  <div class="container mx-auto p-4 md:p-10">
    <div class="flex justify-between items-center mb-6">
      <div class="flex items-center space-x-4">
        <a href="javascript:history.back()"
          class="text-blue-600 dark:text-blue-400 hover:text-blue-500 dark:hover:text-blue-300 inline-flex items-center group transition-colors">
          <i class="fas fa-arrow-left mr-2 group-hover:-translate-x-1 transition-transform"></i>
          Go Back To Home
        </a>
      </div>

      <div class="flex items-center space-x-3">
        <a id="ai-assistant" href="https://finderai.netlify.app/" target="_blank"
          class="p-2 rounded-full hover:bg-zinc-200/50 dark:hover:bg-zinc-700/50 transition-all duration-300 group relative">
          <span class="ai-tooltip">FinderAI...</span>
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-stars"
            viewBox="0 0 16 16" class="h-5 w-5 text-zinc-800 dark:text-zinc-200 group-hover:text-green-500 dark:group-hover:text-green-400
            transition-colors duration-300 ai-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path
              d="M7.657 6.247c.11-.33.576-.33.686 0l.645 1.937a2.89 2.89 0 0 0 1.829 1.828l1.936.645c.33.11.33.576 0 .686l-1.937.645a2.89 2.89 0 0 0-1.828 1.829l-.645 1.936a.361.361 0 0 1-.686 0l-.645-1.937a2.89 2.89 0 0 0-1.828-1.828l-1.937-.645a.361.361 0 0 1 0-.686l1.937-.645a2.89 2.89 0 0 0 1.828-1.828zM3.794 1.148a.217.217 0 0 1 .412 0l.387 1.162c.173.518.579.924 1.097 1.097l1.162.387a.217.217 0 0 1 0 .412l-1.162.387A1.73 1.73 0 0 0 4.593 5.69l-.387 1.162a.217.217 0 0 1-.412 0L3.407 5.69A1.73 1.73 0 0 0 2.31 4.593l-1.162-.387a.217.217 0 0 1 0-.412l1.162-.387A1.73 1.73 0 0 0 3.407 2.31zM10.863.099a.145.145 0 0 1 .274 0l.258.774c.115.346.386.617.732.732l.774.258a.145.145 0 0 1 0 .274l-.774.258a1.16 1.16 0 0 0-.732.732l-.258.774a.145.145 0 0 1-.274 0l-.258-.774a1.16 1.16 0 0 0-.732-.732L9.1 2.137a.145.145 0 0 1 0-.274l.774-.258c.346-.115.617-.386.732-.732z" />
          </svg>
        </a>
        <!-- <button id="theme-toggle"
          class="p-2 rounded-full hover:bg-zinc-200/50 dark:hover:bg-zinc-700/50 transition-all duration-300 group">
          <svg id="theme-icon-dark" xmlns="http://www.w3.org/2000/svg"
            class="h-5 w-5 text-zinc-800 dark:text-zinc-200 group-hover:scale-110 transition-transform" fill="none"
            viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
              d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
          </svg>
          <svg id="theme-icon-light" xmlns="http://www.w3.org/2000/svg"
            class="h-5 w-5 text-zinc-800 dark:text-zinc-200 hidden group-hover:scale-110 transition-transform"
            fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
              d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
          </svg>
        </button> -->
      </div>
    </div>

    <!-- Mobile Menu Bar -->

    <div class="mobile-menu-bar" id="mobileMenuBar">
      <div class="mobile-menu-item active" id="mobileHome">
        <svg class="mobile-menu-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
          stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
            d="M3 9l9-7 9 7v11a2 2 0 01-2 2h-4a2 2 0 01-2-2V12H9v8a2 2 0 01-2 2H3a2 2 0 01-2-2V9z" />
        </svg>
        <span class="mobile-menu-label">Home</span>
      </div>

      <a href="https://mysolvingerai.vercel.app/" target="_blank" rel="noopener noreferrer" class="mobile-menu-item"
        id="mobileChat">
        <svg class="mobile-menu-icon" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
          class="bi bi-chat-left-text" viewBox="0 0 16 16">
          <path
            d="M14 1a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H4.414A2 2 0 0 0 3 11.586l-2 2V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12.793a.5.5 0 0 0 .854.353l2.853-2.853A1 1 0 0 1 4.414 12H14a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z" />
          <path
            d="M3 3.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5M3 6a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9A.5.5 0 0 1 3 6m0 2.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5" />
        </svg>
        <span class="mobile-menu-label">Chat</span>
      </a>

      <div class="mobile-menu-item" id="mobileSearch">
        <svg class="mobile-menu-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
          stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
            d="M21 21l-4.35-4.35m0 0A7.5 7.5 0 1010.5 18a7.5 7.5 0 006.15-3.15z" />
        </svg>
        <span class="mobile-menu-label">Search</span>
      </div>
      <div class="mobile-menu-item" id="mobileSettings">
  <svg class="mobile-menu-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
  </svg>
  <span class="mobile-menu-label">Settings</span>
</div>
    </div>


    <div id="toast"
      class="fixed bottom-4 sm:bottom-6 right-4 sm:right-6 bg-green-600 text-white px-4 py-2 sm:px-6 sm:py-3 rounded-xl shadow-xl transform translate-y-10 opacity-0 transition-all duration-500 flex items-center space-x-2 sm:space-x-3 z-50 responsive-text">
      <div class="toast-icon">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 sm:h-6 sm:w-6" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd"
            d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
            clip-rule="evenodd" />
        </svg>
      </div>
      <span id="toast-message" class="font-medium">File added successfully!</span>
    </div>

    <div class="bg-zinc-100 dark:bg-zinc-800 rounded-lg shadow-xl overflow-hidden transition-all duration-300">
      <div class="p-4 md:p-6">
        <div class="flex justify-between items-center mb-4">
          <h1 class="text-xl md:text-3xl font-bold text-blue-500 dark:text-blue-400 truncate max-w-[70%]">
            <%= filename %>
          </h1>
          <div class="flex items-center space-x-2">
            <span class="text-xs text-zinc-500 dark:text-zinc-400">
              <% const ext=filename.split('.').pop().toUpperCase(); %>
                <%= ext %> File
            </span>
          </div>
        </div>

        <% if (isPdf) { %>
          <!-- PDF Viewer -->
          <div class="pdf-container">
            <embed src="/files/<%= filePath %>" type="application/pdf" width="100%" height="100%"
              class="bg-white dark:bg-zinc-800">
          </div>

          <div class="mt-4 text-sm text-zinc-500 dark:text-zinc-400">
            <p>This is a PDF document. If it doesn't display properly, you can <a href="/files/<%= filename %>"
                class="text-blue-600 dark:text-blue-400 hover:underline" download>download it</a> instead.</p>
          </div>
          <% } else if (isImage) { %>
            <!-- Image Viewer with responsive sizing -->
            <div class="image-container image-loading">
              <img src="/files/<%= filePath %>" alt="<%= filename %>" class="transition-opacity duration-300"
                onload="this.parentElement.classList.remove('image-loading'); this.style.opacity=1" style="opacity:0">
            </div>
            <div class="mt-4 text-sm text-zinc-500 dark:text-zinc-400">
              <p>This is an image file. You can <a href="/files/<%= filePath %>"
                  class="text-blue-600 dark:text-blue-400 hover:underline" download>download it</a> if needed.</p>
              <p class="mt-1">Tap and hold on the image to save it to your device.</p>
            </div>
            <% } else { %>
              <!-- Regular text/markdown content -->
              <div class="prose dark:prose-invert max-w-none">
                <% if (isMarkdown) { %>
                  <%- marked.parse(filedata) %>
                    <% } else { %>
                      <pre class="whitespace-pre-wrap font-sans"><%= filedata %></pre>
                      <% } %>
              </div>
              <% } %>

                <div class="mt-6 pt-4 border-t border-zinc-200 dark:border-zinc-700 flex justify-end">
                  <div class="action-buttons">
                    <button id="share-btn" class="share-btn" title="Share this file">
                      <i class="fas fa-share-alt"></i>
                    </button>
                    <a href="/edit/<%= filePath %>"
                      class="edit-btn px-4 py-2 bg-blue-600 hover:bg-blue-700 rounded-md transition-colors text-white">
                      <i class="fas fa-edit edit-btn-icon mr-2"></i>
                      <span class="edit-btn-text">Edit</span>
                    </a>
                  </div>
                </div>
      </div>
    </div>
  </div>

  <script>
    // Mobile Menu Functionality
    const mobileMenuBar = document.getElementById('mobileMenuBar');
    const mobileHome = document.getElementById('mobileHome');
    const mobileChat = document.getElementById('mobileChat');
    const mobileSearch = document.getElementById('mobileSearch');
const mobileSettings = document.getElementById('mobileSettings');
    const mobileMenuItems = document.querySelectorAll('.mobile-menu-item');

    // Show/hide mobile menu based on screen size
    function checkScreenSize() {
      if (window.innerWidth <= 768) {
        mobileMenuBar.style.display = 'flex';
      } else {
        mobileMenuBar.style.display = 'none';
      }
    }

    // Initial check
    checkScreenSize();

    // Listen for window resize
    window.addEventListener('resize', checkScreenSize);

    // Mobile menu item click handlers
    mobileHome.addEventListener('click', () => {
      // Navigate to home page
      window.location.href = '/';

      // Update active state
      mobileMenuItems.forEach(item => item.classList.remove('active'));
      mobileHome.classList.add('active');

      showToast('Navigating to Home...');
    });

    mobileChat.addEventListener('click', () => {
      // Update active state when the link is clicked
      mobileMenuItems.forEach(item => item.classList.remove('active'));
      mobileChat.classList.add('active');
    });


    mobileSearch.addEventListener('click', () => {
      // Placeholder for search functionality
      mobileMenuItems.forEach(item => item.classList.remove('active'));
      mobileSearch.classList.add('active');

      showToast('Search feature coming soon!', 'info');
    });

   mobileSettings.addEventListener('click', () => {
    // Navigate to the settings page
    window.location.href = '/settings';
    
    // Update active state
    mobileMenuItems.forEach(item => item.classList.remove('active'));
    mobileSettings.classList.add('active');
});

    // Responsive adjustments
    function handleResize() {
      const typewriter = document.getElementById('typewriter');
      if (typewriter) {
        typewriter.style.minHeight = typewriter.scrollHeight + 'px';
      }
      checkScreenSize();
    }

    // Initial call and event listener
    handleResize();
    window.addEventListener('resize', handleResize);

    // Theme Toggle Functionality
    const themeToggle = document.getElementById('theme-toggle');
    const themeIconDark = document.getElementById('theme-icon-dark');
    const themeIconLight = document.getElementById('theme-icon-light');

    const savedTheme = localStorage.getItem('theme') ||
      (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');

    if (savedTheme === 'dark') {
      document.documentElement.classList.add('dark');
      themeIconDark.classList.add('hidden');
      themeIconLight.classList.remove('hidden');
    } else {
      document.documentElement.classList.remove('dark');
      themeIconDark.classList.remove('hidden');
      themeIconLight.classList.add('hidden');
    }

    themeToggle.addEventListener('click', () => {
      if (document.documentElement.classList.contains('dark')) {
        document.documentElement.classList.remove('dark');
        localStorage.setItem('theme', 'light');
        themeIconDark.classList.remove('hidden');
        themeIconLight.classList.add('hidden');
      } else {
        document.documentElement.classList.add('dark');
        localStorage.setItem('theme', 'dark');
        themeIconDark.classList.add('hidden');
        themeIconLight.classList.remove('hidden');
      }
    });

    // Share Button Functionality
    const shareBtn = document.getElementById('share-btn');
    const shareData = {
      title: '<%= filename %>',
      text: 'Check out this file from Finder',
      url: window.location.href
    };

    shareBtn.addEventListener('click', async () => {
      try {
        if (navigator.share) {
          await navigator.share(shareData);
        } else {
          // Fallback for browsers without Web Share API
          await navigator.clipboard.writeText(shareData.url);

          // Create and show a tooltip
          const tooltip = document.createElement('div');
          tooltip.textContent = 'Link copied!';
          tooltip.style.position = 'absolute';
          tooltip.style.bottom = '100%';
          tooltip.style.left = '50%';
          tooltip.style.transform = 'translateX(-50%)';
          tooltip.style.backgroundColor = 'rgba(0, 0, 0, 0.8)';
          tooltip.style.color = 'white';
          tooltip.style.padding = '6px 10px';
          tooltip.style.borderRadius = '4px';
          tooltip.style.fontSize = '12px';
          tooltip.style.zIndex = '100';
          tooltip.style.transition = 'all 0.3s';
          tooltip.style.opacity = '0';
          tooltip.style.marginBottom = '10px';
          tooltip.style.whiteSpace = 'nowrap';
          tooltip.style.pointerEvents = 'none';

          shareBtn.appendChild(tooltip);

          // Trigger reflow
          void tooltip.offsetWidth;

          // Animate in
          tooltip.style.opacity = '1';
          tooltip.style.marginBottom = '5px';

          // Remove after delay
          setTimeout(() => {
            tooltip.style.opacity = '0';
            tooltip.style.marginBottom = '0px';
            setTimeout(() => tooltip.remove(), 300);
          }, 2000);
        }
      } catch (err) {
        console.error('Error sharing:', err);
      }
    });

    // Handle PDF viewer on mobile devices
    function checkPDFViewerSupport() {
      const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
      if (isMobile && '<%= isPdf %>' === 'true') {
        const pdfFallback = document.querySelector('.pdf-mobile-fallback');
        if (pdfFallback) {
          pdfFallback.style.display = 'block';
        }
      }
    }

    // Run on load and if orientation changes
    window.addEventListener('load', checkPDFViewerSupport);
    window.addEventListener('orientationchange', checkPDFViewerSupport);

    // Add download button event listeners
    document.querySelectorAll('a[download]').forEach(link => {
      link.addEventListener('click', (e) => {
        // Track downloads if needed
        console.log(`Downloading: ${link.href}`);
      });
    });
  </script>
</body>

</html>